{"version":3,"sources":["components/advancedSearch/AdvancedSearch.js","components/searchInput/SearchInput.js","components/movieCard/MovieCard.js","components/detailsCard/DetailsCard.js","components/genreFilter/GenreFilter.js","components/moviesContainer/MoviesContainer.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["AdvancedSearch","onHandleChange","field","value","props","onAdvancedSearchChange","this","enableAdvancedSearch","data","Collapse","in","className","Grid","container","spacing","alignItems","item","color","TextField","movieTitle","label","onChange","e","target","actor","year","keywords","Component","SearchInput","onSearchChange","setState","query","setSearchInput","event","text","querySearch","toggleAdvancedSearch","state","a","async","preventDefault","length","getMoviesForQuery","showErrorMsg","showExamples","advancedSearchData","xs","noValidate","autoComplete","onSubmit","id","variant","fullWidth","Button","type","FormControlLabel","control","Switch","checked","Typography","Link","underline","onClick","MovieCard","viewDetails","quote_id","full_quote","title","character_name","categories","plotKeywords","slice","Card","raised","CardMedia","image","thumbnail","CardActionArea","CardContent","join","React","DetailsCard","showMoreCast","moreCastVisible","prevProps","details","movie_id","castSlice","cast","description","gutterBottom","rating","map","key","character","href","GenreFilter","filterByGenre","genre","variants","selectedGenres","Object","keys","filter","includes","genres","forEach","ButtonGroup","aria-label","GenreButton","onGenreClick","MoviesContainer","selectedGenre","d","showDetails","viewDetailsCard","quoteId","handleClick","offset","perPage","movie","idx","Zoom","style","transitionDelay","find","limit","total","axios","create","baseURL","responseType","darkTheme","createMuiTheme","palette","primary","main","secondary","light","contrastText","App","loading","API","post","movie_title","response","movies","category_list","showCards","console","error","ThemeProvider","theme","Container","Array","apply","i","Skeleton","width","height","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd42d41f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Collapse, TextField } from '@material-ui/core'\nimport TheatersOutlinedIcon from '@material-ui/icons/TheatersOutlined'\nimport HourglassEmptyOutlinedIcon from '@material-ui/icons/HourglassEmptyOutlined'\nimport VpnKeyOutlinedIcon from '@material-ui/icons/VpnKeyOutlined'\nimport RecentActorsIcon from '@material-ui/icons/RecentActors'\n\nimport './advancedSearch.scss'\n\nexport default class AdvancedSearch extends Component {\n  onHandleChange = (field, value) => {\n    this.props.onAdvancedSearchChange(field, value)\n  }\n\n  render() {\n    const { enableAdvancedSearch, data } = this.props\n\n    return(\n      <Collapse in={enableAdvancedSearch}>\n        <div className=\"adv-search\">\n          <div className=\"adv-search-container\">\n            <Grid container spacing={1} alignItems=\"space-between\" className=\"adv-search-item\">\n              <Grid item><TheatersOutlinedIcon color=\"primary\" /></Grid>\n              <Grid item>\n                <TextField value={data.movieTitle} label=\"Movie title\" onChange={e => this.onHandleChange('movieTitle', e.target.value)} />\n              </Grid>\n            </Grid>\n            <Grid container spacing={1} alignItems=\"space-between\" className=\"adv-search-item\">\n              <Grid item><RecentActorsIcon color=\"primary\" /></Grid>\n              <Grid item>\n                <TextField value={data.actor} label=\"Actor/Actress\" onChange={e => this.onHandleChange('actor', e.target.value)} />\n              </Grid>\n            </Grid>\n          </div>\n          <div className=\"adv-search-container\">\n            <Grid container spacing={1} alignItems=\"space-between\" className=\"adv-search-item\">\n              <Grid item><HourglassEmptyOutlinedIcon color=\"primary\" /></Grid>\n              <Grid item>\n                <TextField value={data.year} label=\"Year\" onChange={e => this.onHandleChange('year', e.target.value)} />\n              </Grid>\n            </Grid>\n             <Grid container spacing={1} alignItems=\"space-between\" className=\"adv-search-item\">\n                <Grid item><VpnKeyOutlinedIcon color=\"primary\" /></Grid>\n                <Grid item>\n                  <TextField value={data.keywords} label=\"Keywords\" onChange={e => this.onHandleChange('keywords', e.target.value)} />\n                </Grid>\n              </Grid>\n          </div>\n        </div>\n      </Collapse>\n    )\n  }\n}\n\nAdvancedSearch.propTypes = {\n  enableAdvancedSearch: PropTypes.bool.isRequired,\n  data: PropTypes.shape({\n    movieTitle: PropTypes.string,\n    actor: PropTypes.string,\n    year: PropTypes.string,\n    keywords: PropTypes.string,\n  }).isRequired,\n  onAdvancedSearchChange: PropTypes.bool.isRequired\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, FormControlLabel, Switch, TextField, Button, Link, Typography } from '@material-ui/core'\nimport AdvancedSearch from '../advancedSearch/AdvancedSearch'\n\nimport './searchInput.scss'\n\nexport default class SearchInput extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      query: '',\n      movieTitle: '',\n      actor: '',\n      year: '',\n      keywords: '',\n      enableAdvancedSearch: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ showErrorMsg: false })\n  }\n\n  onSearchChange = e => {\n    this.setState({ query: e.target.value })\n  }\n\n  setSearchInput = (event) => {\n    this.setState({ query: event.target.text }, this.querySearch)\n  }\n\n  toggleAdvancedSearch = () => this.setState({ enableAdvancedSearch: !this.state.enableAdvancedSearch })\n\n  onAdvancedSearchChange = (field, value) => this.setState({ [field]: value })\n\n  querySearch = async (e) => {\n    e && e.preventDefault()\n    const { query, movieTitle, actor, year, keywords, enableAdvancedSearch } = this.state\n\n    if (!enableAdvancedSearch) {\n      this.props.getMoviesForQuery({query, movieTitle: '', actor: '', year: '', keywords: ''})\n    } else if (query.length | movieTitle.length | actor.length | year.length | keywords.length) {\n      this.props.getMoviesForQuery({query, movieTitle, actor, year, keywords})\n    }\n  }\n\n  render() {\n    const { enableAdvancedSearch, movieTitle, actor, year, keywords } = this.state\n    const { showErrorMsg, showExamples } = this.props\n    const advancedSearchData = { movieTitle, actor, year, keywords }\n\n    return (\n      <Grid item xs={12}>\n        <form noValidate autoComplete=\"off\" onSubmit={this.querySearch}>\n          <div className=\"search-form\">\n            <div className=\"search-input\">\n              <TextField\n                id=\"outlined-basic\"\n                label=\"Search for a movie quote...\"\n                variant=\"outlined\"\n                fullWidth\n                onChange={this.onSearchChange}\n                value = {this.state.query}\n              />\n            </div>\n            <Button\n              className=\"search-button\"\n              variant=\"outlined\"\n              color=\"primary\"\n              type=\"submit\"\n            >Search</Button>\n\n            <FormControlLabel\n              className=\"advanced-search-button\"\n              control={\n                <Switch\n                  checked={enableAdvancedSearch}\n                  onChange={this.toggleAdvancedSearch}\n                  value=\"checkedB\"\n                  color=\"primary\"\n                />\n              }\n              label=\"Advanced Search\"\n            />\n          </div>\n\n          <AdvancedSearch\n            enableAdvancedSearch={enableAdvancedSearch}\n            data={advancedSearchData}\n            onAdvancedSearchChange={this.onAdvancedSearchChange}\n          />\n        </form>\n\n\n        {showExamples &&\n          <Typography variant=\"h6\" color=\"primary\">\n            <span>\n              Try <Link color=\"primary\" underline=\"none\" variant=\"inherit\" onClick={this.setSearchInput}>\n                I see dead people\n              </Link>\n            </span>\n            <span> or <Link color=\"primary\" underline=\"none\" variant=\"inherit\" onClick={this.setSearchInput}>\n                Following's not really my style\n              </Link>\n            </span>\n          </Typography>\n        }\n        {showErrorMsg &&\n          <h6 className=\"error-container\">\n            Error: API not running. Go to ttds_movie_search/api and run ./run.sh\n          </h6>\n        }\n      </Grid>\n    )\n  }\n}\n\nSearchInput.propTypes = {\n  getMoviesForQuery: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Card, CardMedia, CardContent, CardActionArea, Typography } from '@material-ui/core'\n\nimport './movieCard.scss'\n\nexport default class MovieCard extends React.Component {\n  viewDetails = () => {\n    this.props.viewDetails(this.props.quote_id)\n  }\n\n  render() {\n    const { full_quote, title, character_name, categories, plotKeywords } = this.props\n    const keywords = plotKeywords.length > 5 ? plotKeywords.slice(0, 5) : plotKeywords\n\n    return (\n      <div>\n        <Card raised className=\"card-container\">\n          <CardMedia\n            className=\"card-media\"\n            image={this.props.thumbnail}\n          />\n          <CardActionArea onClick={this.viewDetails}>\n            <div className=\"card-content\">\n              <CardContent>\n                <Typography variant=\"h5\">{full_quote}</Typography>\n                <Typography variant=\"h6\">{title}</Typography>\n                <br/>\n                <Typography variant=\"body2\">Character: {character_name}</Typography>\n                <Typography variant=\"body2\">Category: {categories.join(', ')}</Typography>\n              </CardContent>\n            </div>\n          </CardActionArea>\n        </Card>\n      </div>\n    )\n  }\n}\n\nMovieCard.propTypes = {\n  // movie is an object of this particular shape\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    info: PropTypes.string,\n    img: PropTypes.string,\n    imgTitle: PropTypes.string\n  })\n}\n","import React, { Component, Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { Card, CardContent, Typography, Button, Link } from '@material-ui/core'\n\nimport './detailsCard.scss'\n\nexport default class DetailsCard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      moreCastVisible: false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.details.movie_id !== this.props.details.movie_id) {\n      this.setState({ moreCastVisible: false })\n    }\n  }\n\n  showMoreCast = e => {\n    e.preventDefault()\n    this.setState({ moreCastVisible: !this.state.moreCastVisible })\n  }\n\n  render() {\n    const { details } = this.props\n    const { moreCastVisible } = this.state\n    const castSlice = details.cast.length > 10 ? 10 : details.cast.length\n\n    return(\n      <div {...this.props} className=\"details-card\">\n        <Card raised className=\"card-container\">\n          <CardContent>\n            <div className=\"card-content\">\n              {details &&\n                <CardContent>\n                  <Typography variant=\"h5\">{details.title}</Typography>\n                  <Typography variant=\"body1\">{details.description}</Typography>\n                  <Typography variant=\"body1\"><b>Year:</b> {details.year}</Typography>\n                  <Typography variant=\"body1\" gutterBottom><b>Rating:</b> {details.rating}</Typography>\n                  {details.cast.length > 0 && <Typography variant=\"h5\">Cast</Typography>}\n\n                  {details.cast.slice(0, castSlice).map((item) =>\n                    <Typography key={item.actor} variant=\"body1\">{item.actor} as <i>{item.character}</i></Typography>\n                  )}\n\n                  {details.cast.length > 10 &&\n                    <Fragment>\n                      {!moreCastVisible && <Link onClick={this.showMoreCast}><Typography>Show more...</Typography></Link>}\n                      {moreCastVisible && details.cast.slice(10, -1).map((item) =>\n                          <Typography key={item.actor} variant=\"body1\">{item.actor} as <i>{item.character}</i></Typography>\n                        )\n                      }\n                    </Fragment>\n                  }\n                  <br/>\n                  <Typography variant=\"body1\" gutterBottom></Typography>\n                  <Button target=\"_blank\" variant=\"contained\" color=\"primary\" href={`https://www.imdb.com/title/${details.movie_id}`}>View in IMDB</Button>\n                </CardContent>\n              }\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    )\n  }\n}\n\nDetailsCard.propTypes = {\n  details: PropTypes.object.isRequired\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { ButtonGroup, Button } from '@material-ui/core'\n\nimport './genreFilter.scss'\n\nexport default class GenreFilter extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      variants: {},\n      selectedGenres: []\n    }\n  }\n\n  componentWillMount() {\n    const variants = {}\n    this.props.genres.forEach(genre => {\n      variants[genre] = 'text'\n    })\n    this.setState({ variants })\n  }\n\n  filterByGenre = (genre) => {\n    const { variants } = this.state\n\n    const selectedGenres = Object.keys(variants).filter(genre => {\n      const variant = variants[genre]\n      return variant === 'contained'\n    })\n\n    // Unselect the genre if clicked twice\n    for (let variant in variants) {\n      if (!(variant in selectedGenres)) {\n        variants[variant] = 'text'\n      }\n    }\n\n    if (!(selectedGenres.includes(genre))) {\n      variants[genre] = 'contained'\n    }\n\n    this.setState({ variants }, () => this.props.filterByGenre(variants))\n  }\n\n  render() {\n    const { genres } = this.props\n\n    return(\n      <ButtonGroup color=\"primary\" aria-label=\"primary button group\">\n      {\n        genres.map((genre, value) =>\n          <GenreButton\n            key={genre}\n            genre={genre}\n            variant={this.state.variants[genre]}\n            filterByGenre={this.filterByGenre}\n          />\n        )\n      }\n      </ButtonGroup>\n    )\n  }\n}\n\n\nclass GenreButton extends Component {\n  onGenreClick = genre => {\n    this.props.filterByGenre(genre)\n  }\n\n  render() {\n    const { genre, variant } = this.props\n\n    return(\n      <Button\n        variant={variant}\n        color=\"primary\"\n        id={genre}\n        onClick={() => this.onGenreClick(genre)}>{genre}</Button>\n    )\n  }\n}\n\n\nGenreFilter.propTypes = {\n  genres: PropTypes.array.isRequired,\n  filterByGenre: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, Zoom, Typography } from '@material-ui/core'\nimport Pagination from 'material-ui-flat-pagination'\n\nimport MovieCard from '../movieCard/MovieCard'\nimport DetailsCard from '../detailsCard/DetailsCard'\nimport GenreFilter from '../genreFilter/GenreFilter'\n\n\nimport './moviesContainer.scss'\n\nexport default class MoviesContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      data: [],\n      showDetails: false,\n      quoteId: null,\n      offset: 0,\n      perPage: 3\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ data: this.props.data, showDetails: false })\n  }\n\n  filterByGenre = genres => {\n    let data = this.props.data\n    const selectedGenre = Object.keys(genres).filter(genre => genres[genre] === 'contained')\n\n    // Filter data if there is a selected genre\n    if (selectedGenre.length) {\n      data = data.filter(d => d.categories.includes(selectedGenre[0]))\n    }\n\n    this.setState({ data, showDetails: false })\n  }\n\n  viewDetailsCard = quoteId => {\n    this.setState({ showDetails: true, quoteId })\n  }\n\n  handleClick = (offset) => {\n    this.setState({ offset })\n  }\n\n  render() {\n    const { showDetails, quoteId, data, offset, perPage } = this.state\n    const { genres } = this.props\n\n    return(\n      <div>\n        <Grid container className=\"movies-container\" spacing={6}>\n          {data.length > 0 &&\n            <Grid item xs={12}><GenreFilter genres={genres} filterByGenre={this.filterByGenre} /></Grid>\n          }\n\n          <Grid item xs={8}>\n            <Typography variant=\"h6\" color=\"primary\">{`Query results: ${data.length} movies`}</Typography>\n\n            {data.slice(offset, offset + perPage).map((movie, idx) =>\n              <MovieCard key={idx} viewDetails={this.viewDetailsCard} {...movie} />\n            )}\n          </Grid>\n\n          {showDetails &&\n            <Grid item xs={4}>\n              <Zoom in={showDetails} style={{ transitionDelay: showDetails ? '100ms' : '0ms' }}>\n                <DetailsCard details={data.find(d => d.quote_id === quoteId)} />\n              </Zoom>\n            </Grid>\n          }\n        </Grid>\n        {data.length > 0 &&\n          <Pagination\n            limit={perPage}\n            offset={offset}\n            total={data.length}\n            onClick={(e, offset) => this.handleClick(offset)}\n          />\n        }\n      </div>\n    )\n  }\n}\n\nMoviesContainer.propTypes = {\n  movies: PropTypes.array.isRequired,\n  genres: PropTypes.array.isRequired\n}\n","import axios from 'axios'\n\nexport default axios.create({\n  baseURL: 'http://localhost:5000/',\n  responseType: 'json'\n})\n","import React, { Component, Fragment } from 'react'\nimport { Container } from '@material-ui/core'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport SearchInput from './components/searchInput/SearchInput'\nimport MoviesContainer from './components/moviesContainer/MoviesContainer'\nimport API from './utils/API'\n\nimport './app.scss'\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: '#2196f3',\n    },\n    secondary: {\n      light: '#cc33ff',\n      main: '#e699ff',\n      contrastText: '#ffcc00',\n    }\n  },\n});\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      movies: [],\n      showCards: false,\n      showExamples: true,\n      showErrorMsg: false,\n      loading: true\n    }\n  }\n\n  getMoviesForQuery = data => {\n    const { query, movieTitle, actor, year, keywords } = data\n\n    this.setState({ loading: true }, async () => {\n      try {\n        const response = await API.post('/query_search', { query, movie_title: movieTitle, actor, year, keywords })\n        this.setState({\n          movies: response.data.movies,\n          genres: response.data.category_list,\n          showCards: true,\n          showExamples: false,\n          loading: false\n        })\n      } catch (error) {\n        // @TODO: Show a proper error message to the user\n        console.error(error)\n        this.setState({\n          showErrorMsg: true,\n          showExamples: true,\n          loading: false\n        })\n      }\n    })\n  }\n\n  render() {\n    const { showCards, movies, genres, showExamples, showErrorMsg, loading } = this.state\n\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <Container className=\"app\">\n          <h3>TTDS Movie Project 2020</h3>\n          <div className=\"search-container\">\n            <SearchInput\n              getMoviesForQuery={this.getMoviesForQuery}\n              showExamples={showExamples}\n              showErrorMsg={showErrorMsg}\n            />\n          </div>\n          {showCards &&\n            <Fragment>\n              {loading ?\n                <Fragment>\n                  {Array.apply(null, { length: 2 }).map((e, i) => (\n                    <Skeleton variant=\"rect\" width={790} height={170} className=\"skeleton-card\" />\n                  ))}\n                </Fragment>\n                : <MoviesContainer data={movies} genres={genres} />\n              }\n            </Fragment>\n          }\n        </Container>\n      </ThemeProvider>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}